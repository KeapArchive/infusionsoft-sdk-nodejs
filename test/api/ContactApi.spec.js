/**
 * Infusionsoft REST API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: V1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.InfusionsoftRestApi);
  }
}(this, function(expect, InfusionsoftRestApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new InfusionsoftRestApi.ContactApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ContactApi', function() {
    describe('applyTagsToContactIdUsingPOST', function() {
      it('should call applyTagsToContactIdUsingPOST successfully', function(done) {
        //uncomment below and update the code to test applyTagsToContactIdUsingPOST
        //instance.applyTagsToContactIdUsingPOST(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createContactUsingPOST', function() {
      it('should call createContactUsingPOST successfully', function(done) {
        //uncomment below and update the code to test createContactUsingPOST
        //instance.createContactUsingPOST(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createOrUpdateContactUsingPUT', function() {
      it('should call createOrUpdateContactUsingPUT successfully', function(done) {
        //uncomment below and update the code to test createOrUpdateContactUsingPUT
        //instance.createOrUpdateContactUsingPUT(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteContactUsingDELETE', function() {
      it('should call deleteContactUsingDELETE successfully', function(done) {
        //uncomment below and update the code to test deleteContactUsingDELETE
        //instance.deleteContactUsingDELETE(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listAppliedTagsUsingGET', function() {
      it('should call listAppliedTagsUsingGET successfully', function(done) {
        //uncomment below and update the code to test listAppliedTagsUsingGET
        //instance.listAppliedTagsUsingGET(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listContactsUsingGET', function() {
      it('should call listContactsUsingGET successfully', function(done) {
        //uncomment below and update the code to test listContactsUsingGET
        //instance.listContactsUsingGET(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listCustomFieldsUsingGET', function() {
      it('should call listCustomFieldsUsingGET successfully', function(done) {
        //uncomment below and update the code to test listCustomFieldsUsingGET
        //instance.listCustomFieldsUsingGET(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('loadUsingGET', function() {
      it('should call loadUsingGET successfully', function(done) {
        //uncomment below and update the code to test loadUsingGET
        //instance.loadUsingGET(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('removeTagsFromContactUsingDELETE', function() {
      it('should call removeTagsFromContactUsingDELETE successfully', function(done) {
        //uncomment below and update the code to test removeTagsFromContactUsingDELETE
        //instance.removeTagsFromContactUsingDELETE(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('removeTagsFromContactUsingDELETE1', function() {
      it('should call removeTagsFromContactUsingDELETE1 successfully', function(done) {
        //uncomment below and update the code to test removeTagsFromContactUsingDELETE1
        //instance.removeTagsFromContactUsingDELETE1(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateContactUsingPATCH', function() {
      it('should call updateContactUsingPATCH successfully', function(done) {
        //uncomment below and update the code to test updateContactUsingPATCH
        //instance.updateContactUsingPATCH(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
