/**
 * Infusionsoft REST API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: V1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.InfusionsoftRestApi);
  }
}(this, function(expect, InfusionsoftRestApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new InfusionsoftRestApi.TaskApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('TaskApi', function() {
    describe('createTaskUsingPOST', function() {
      it('should call createTaskUsingPOST successfully', function(done) {
        //uncomment below and update the code to test createTaskUsingPOST
        //instance.createTaskUsingPOST(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('loadTaskUsingGET', function() {
      it('should call loadTaskUsingGET successfully', function(done) {
        //uncomment below and update the code to test loadTaskUsingGET
        //instance.loadTaskUsingGET(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('removeTaskUsingDELETE', function() {
      it('should call removeTaskUsingDELETE successfully', function(done) {
        //uncomment below and update the code to test removeTaskUsingDELETE
        //instance.removeTaskUsingDELETE(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('replaceTaskUsingPUT', function() {
      it('should call replaceTaskUsingPUT successfully', function(done) {
        //uncomment below and update the code to test replaceTaskUsingPUT
        //instance.replaceTaskUsingPUT(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('searchUsingGET4', function() {
      it('should call searchUsingGET4 successfully', function(done) {
        //uncomment below and update the code to test searchUsingGET4
        //instance.searchUsingGET4(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('syncUsingGET2', function() {
      it('should call syncUsingGET2 successfully', function(done) {
        //uncomment below and update the code to test syncUsingGET2
        //instance.syncUsingGET2(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('tasksUsingGET', function() {
      it('should call tasksUsingGET successfully', function(done) {
        //uncomment below and update the code to test tasksUsingGET
        //instance.tasksUsingGET(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateTaskUsingPATCH', function() {
      it('should call updateTaskUsingPATCH successfully', function(done) {
        //uncomment below and update the code to test updateTaskUsingPATCH
        //instance.updateTaskUsingPATCH(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
