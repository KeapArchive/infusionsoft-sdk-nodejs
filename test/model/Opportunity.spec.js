/**
 * Infusionsoft REST API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: V1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.InfusionsoftRestApi);
  }
}(this, function(expect, InfusionsoftRestApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new InfusionsoftRestApi.Opportunity();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('Opportunity', function() {
    it('should create an instance of Opportunity', function() {
      // uncomment below and update the code to test Opportunity
      //var instane = new InfusionsoftRestApi.Opportunity();
      //expect(instance).to.be.a(InfusionsoftRestApi.Opportunity);
    });

    it('should have the property contact (base name: "contact")', function() {
      // uncomment below and update the code to test the property contact
      //var instane = new InfusionsoftRestApi.Opportunity();
      //expect(instance).to.be();
    });

    it('should have the property dateCreated (base name: "date_created")', function() {
      // uncomment below and update the code to test the property dateCreated
      //var instane = new InfusionsoftRestApi.Opportunity();
      //expect(instance).to.be();
    });

    it('should have the property estimatedCloseDate (base name: "estimated_close_date")', function() {
      // uncomment below and update the code to test the property estimatedCloseDate
      //var instane = new InfusionsoftRestApi.Opportunity();
      //expect(instance).to.be();
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instane = new InfusionsoftRestApi.Opportunity();
      //expect(instance).to.be();
    });

    it('should have the property includeInForecast (base name: "include_in_forecast")', function() {
      // uncomment below and update the code to test the property includeInForecast
      //var instane = new InfusionsoftRestApi.Opportunity();
      //expect(instance).to.be();
    });

    it('should have the property lastUpdated (base name: "last_updated")', function() {
      // uncomment below and update the code to test the property lastUpdated
      //var instane = new InfusionsoftRestApi.Opportunity();
      //expect(instance).to.be();
    });

    it('should have the property nextActionDate (base name: "next_action_date")', function() {
      // uncomment below and update the code to test the property nextActionDate
      //var instane = new InfusionsoftRestApi.Opportunity();
      //expect(instance).to.be();
    });

    it('should have the property nextActionNotes (base name: "next_action_notes")', function() {
      // uncomment below and update the code to test the property nextActionNotes
      //var instane = new InfusionsoftRestApi.Opportunity();
      //expect(instance).to.be();
    });

    it('should have the property opportunityNotes (base name: "opportunity_notes")', function() {
      // uncomment below and update the code to test the property opportunityNotes
      //var instane = new InfusionsoftRestApi.Opportunity();
      //expect(instance).to.be();
    });

    it('should have the property opportunityTitle (base name: "opportunity_title")', function() {
      // uncomment below and update the code to test the property opportunityTitle
      //var instane = new InfusionsoftRestApi.Opportunity();
      //expect(instance).to.be();
    });

    it('should have the property projectedRevenueHigh (base name: "projected_revenue_high")', function() {
      // uncomment below and update the code to test the property projectedRevenueHigh
      //var instane = new InfusionsoftRestApi.Opportunity();
      //expect(instance).to.be();
    });

    it('should have the property projectedRevenueLow (base name: "projected_revenue_low")', function() {
      // uncomment below and update the code to test the property projectedRevenueLow
      //var instane = new InfusionsoftRestApi.Opportunity();
      //expect(instance).to.be();
    });

    it('should have the property stage (base name: "stage")', function() {
      // uncomment below and update the code to test the property stage
      //var instane = new InfusionsoftRestApi.Opportunity();
      //expect(instance).to.be();
    });

    it('should have the property user (base name: "user")', function() {
      // uncomment below and update the code to test the property user
      //var instane = new InfusionsoftRestApi.Opportunity();
      //expect(instance).to.be();
    });

  });

}));
