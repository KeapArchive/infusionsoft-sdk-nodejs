/**
 * Infusionsoft REST API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: V1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.InfusionsoftRestApi);
  }
}(this, function(expect, InfusionsoftRestApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new InfusionsoftRestApi.Transaction();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('Transaction', function() {
    it('should create an instance of Transaction', function() {
      // uncomment below and update the code to test Transaction
      //var instane = new InfusionsoftRestApi.Transaction();
      //expect(instance).to.be.a(InfusionsoftRestApi.Transaction);
    });

    it('should have the property amount (base name: "amount")', function() {
      // uncomment below and update the code to test the property amount
      //var instane = new InfusionsoftRestApi.Transaction();
      //expect(instance).to.be();
    });

    it('should have the property collectionMethod (base name: "collection_method")', function() {
      // uncomment below and update the code to test the property collectionMethod
      //var instane = new InfusionsoftRestApi.Transaction();
      //expect(instance).to.be();
    });

    it('should have the property contactId (base name: "contact_id")', function() {
      // uncomment below and update the code to test the property contactId
      //var instane = new InfusionsoftRestApi.Transaction();
      //expect(instance).to.be();
    });

    it('should have the property currency (base name: "currency")', function() {
      // uncomment below and update the code to test the property currency
      //var instane = new InfusionsoftRestApi.Transaction();
      //expect(instance).to.be();
    });

    it('should have the property errors (base name: "errors")', function() {
      // uncomment below and update the code to test the property errors
      //var instane = new InfusionsoftRestApi.Transaction();
      //expect(instance).to.be();
    });

    it('should have the property gateway (base name: "gateway")', function() {
      // uncomment below and update the code to test the property gateway
      //var instane = new InfusionsoftRestApi.Transaction();
      //expect(instance).to.be();
    });

    it('should have the property gatewayAccountName (base name: "gateway_account_name")', function() {
      // uncomment below and update the code to test the property gatewayAccountName
      //var instane = new InfusionsoftRestApi.Transaction();
      //expect(instance).to.be();
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instane = new InfusionsoftRestApi.Transaction();
      //expect(instance).to.be();
    });

    it('should have the property orderIds (base name: "order_ids")', function() {
      // uncomment below and update the code to test the property orderIds
      //var instane = new InfusionsoftRestApi.Transaction();
      //expect(instance).to.be();
    });

    it('should have the property orders (base name: "orders")', function() {
      // uncomment below and update the code to test the property orders
      //var instane = new InfusionsoftRestApi.Transaction();
      //expect(instance).to.be();
    });

    it('should have the property status (base name: "status")', function() {
      // uncomment below and update the code to test the property status
      //var instane = new InfusionsoftRestApi.Transaction();
      //expect(instance).to.be();
    });

    it('should have the property test (base name: "test")', function() {
      // uncomment below and update the code to test the property test
      //var instane = new InfusionsoftRestApi.Transaction();
      //expect(instance).to.be();
    });

    it('should have the property transactionDate (base name: "transaction_date")', function() {
      // uncomment below and update the code to test the property transactionDate
      //var instane = new InfusionsoftRestApi.Transaction();
      //expect(instance).to.be();
    });

    it('should have the property type (base name: "type")', function() {
      // uncomment below and update the code to test the property type
      //var instane = new InfusionsoftRestApi.Transaction();
      //expect(instance).to.be();
    });

  });

}));
